-- MySQL Script generated by MySQL Workbench
-- Tue Aug 16 17:26:03 2022
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema clinic
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema clinic
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `clinic` DEFAULT CHARACTER SET utf8 ;
USE `clinic` ;

-- -----------------------------------------------------
-- Table `mydb`.`eventCategory`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `clinic`.`eventCategory` (
  `eventCategoryId` INT NOT NULL auto_increment,
  `eventCategoryName` VARCHAR(100) NOT NULL,
  `eventCategoryDescription` VARCHAR(500) NULL,
  `eventDuration` INT NOT NULL,
  PRIMARY KEY (`eventCategoryId`),
  UNIQUE INDEX `eventCategoryName_UNIQUE` (`eventCategoryName` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `clinic`.`event`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `clinic`.`event` (
  `eventId` INT NOT NULL auto_increment,
  `bookingName` VARCHAR(100) NOT NULL,
  `bookingEmail` VARCHAR(255) NOT NULL,
--   `eventStartTime` DATETIME NOT NULL default current_timestamp,
`eventStartTime` DATETIME NOT NULL ,
  `eventNotes` VARCHAR(500) NULL,
  `eventDuration` INT NOT NULL,
  `eventCategoryId` INT NOT NULL,
  PRIMARY KEY (`eventId`),
  INDEX `fk_event_eventCategory_idx` (`eventCategoryId` ASC) VISIBLE,
  CONSTRAINT `fk_event_eventCategory`
    FOREIGN KEY (`eventCategoryId`)
    REFERENCES `clinic`.`eventCategory` (`eventCategoryId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_event_user1`
    FOREIGN KEY (`user_userId`)
    REFERENCES `clinic`.`user` (`userId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

-- -----------------------------------------------------
-- Table `clinic`.`user`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `clinic`.`user` ;

CREATE TABLE IF NOT EXISTS `clinic`.`user` (
  `userId` INT NOT NULL auto_increment,
  `name` VARCHAR(100) NOT NULL,
  `email` VARCHAR(50) NOT NULL,
  `role` ENUM('student', 'lecturer', 'admin') NOT NULL,
  `createdOn` DATETIME NOT NULL default current_timestamp,
  `updatedOn` DATETIME NOT NULL default current_timestamp on update current_timestamp,
  `password` VARCHAR(90) NOT NULL,
  PRIMARY KEY (`userId`),
  UNIQUE INDEX `name_UNIQUE` (`name` ASC) VISIBLE,
  UNIQUE INDEX `email_UNIQUE` (`email` ASC) VISIBLE)
ENGINE = InnoDB;

-- -----------------------------------------------------
-- Table `clinic`.`event_category_owner`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `clinic`.`event_category_owner` ;

CREATE TABLE IF NOT EXISTS `clinic`.`event_category_owner` (
  `userId` INT NOT NULL,
  `eventCategoryId` INT NOT NULL,
  PRIMARY KEY (`userId`, `eventCategoryId`),
  INDEX `fk_user_has_eventCategory_eventCategory1_idx` (`eventCategoryId` ASC) VISIBLE,
  INDEX `fk_user_has_eventCategory_user1_idx` (`userId` ASC) VISIBLE,
  CONSTRAINT `fk_user_has_eventCategory_user1`
    FOREIGN KEY (`userId`)
    REFERENCES `clinic`.`user` (`userId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_user_has_eventCategory_eventCategory1`
    FOREIGN KEY (`eventCategoryId`)
    REFERENCES `clinic`.`eventCategory` (`eventCategoryId`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

